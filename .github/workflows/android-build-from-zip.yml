name: Build Debug APK from ZIP

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /opt/android-sdk
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK tools
        run: |
          mkdir -p $ANDROID_SDK_ROOT
          cd $ANDROID_SDK_ROOT
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ || true
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Accept licenses
        run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses --sdk_root=$ANDROID_SDK_ROOT || true

      - name: Unzip project archive
        run: |
          if [ -f plantreningowy_android_package.zip ]; then
            unzip -o plantreningowy_android_package.zip -d $GITHUB_WORKSPACE
          else
            echo "ZIP file not found in repo root. Ensure you uploaded plantreningowy_android_package.zip"
            exit 1
          fi

      - name: Make gradlew executable (if present)
        run: |
          if [ -f ./gradlew ]; then chmod +x ./gradlew; fi

      - name: Build Debug APK (gradle action)
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
